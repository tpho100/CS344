#include "Node.h"

template <typename K, typename V>
Node<T>::Node(K k,V v ) {
	key = k;
	value = v;
	left = 0;
	right = 0;
	parent = 0;
}

template <typename K, typename V>
V Node<K,V>::getValue(){
	return value;
}

template <typename K, typename V>
K Node<K,V>::getKey(){
	return key;
}

template <typename K, typename V>
Node<K,V> *& Node<K,V>::getLeft(){
	return left;
}

template <typename K, typename V>
void Node<K,V>::setLeft(Node<K,V> & x){
	left = &x;
}

template <typename K, typename V>
Node<K,V> *& Node<K,V>::getRight(){
	return right;
}

template <typename K, typename V>
void Node<K,V>::setRight(Node<K,V> & x){
	right = &x;
}

template <typename K, typename V>
Node<K,V> *& Node<K,V>::getParent(){
	return parent;
}

template <typename K, typename V>
void Node<K,V>::setParent(Node<K,V> & x){
	parent = &x;
}
